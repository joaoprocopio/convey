// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries.sql

package queries

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const listPropostas = `-- name: ListPropostas :many
SELECT
    p.id,
    p.status,
    p.name,
    u.id AS assignee_id,
    u.email AS assignee_email
FROM propostas AS p

LEFT JOIN users AS u
    ON p.assignee_id = u.id

ORDER BY p.status
`

type ListPropostasRow struct {
	ID            int32
	Status        PropostaStatus
	Name          string
	AssigneeID    pgtype.Int4
	AssigneeEmail pgtype.Text
}

func (q *Queries) ListPropostas(ctx context.Context) ([]ListPropostasRow, error) {
	rows, err := q.db.Query(ctx, listPropostas)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListPropostasRow
	for rows.Next() {
		var i ListPropostasRow
		if err := rows.Scan(
			&i.ID,
			&i.Status,
			&i.Name,
			&i.AssigneeID,
			&i.AssigneeEmail,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
