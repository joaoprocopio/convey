// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: queries.sql

package queries

import (
	"context"
)

const listPropostas = `-- name: ListPropostas :many
SELECT
    id,
    status,
    name
FROM propostas
ORDER BY status
`

type ListPropostasRow struct {
	ID     int32          `json:"id"`
	Status PropostaStatus `json:"status"`
	Name   string         `json:"name"`
}

func (q *Queries) ListPropostas(ctx context.Context) ([]ListPropostasRow, error) {
	rows, err := q.db.Query(ctx, listPropostas)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListPropostasRow
	for rows.Next() {
		var i ListPropostasRow
		if err := rows.Scan(&i.ID, &i.Status, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
